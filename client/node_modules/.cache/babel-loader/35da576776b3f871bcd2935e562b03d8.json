{"ast":null,"code":"var _jsxFileName = \"/Users/alex/Documents/dex/client/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Header from './Header.js';\nimport Footer from './Footer.js';\nimport Wallet from './Wallet.js';\nimport NewOrder from './NewOrder.js';\nimport AllOrders from './AllOrders';\nimport MyOrders from './MyOrders.js';\nimport AllTrades from './AllTrades';\nconst SIDE = {\n  BUY: 0,\n  SELL: 1\n};\n\nfunction App({\n  web3,\n  accounts,\n  contracts\n}) {\n  const [tokens, setTokens] = useState([]);\n  const [user, setUser] = useState({\n    accounts: [],\n    balances: {\n      tokenDex: 0,\n      tokenWallet: 0\n    },\n    selectedToken: undefined\n  });\n  const [orders, setOrders] = useState({\n    buy: [],\n    sell: []\n  });\n  const [trades, setTrades] = useState([]);\n\n  const getBalances = async (account, token) => {\n    const tokenDex = await contracts.dex.methods.traderBalances(account, web3.utils.fromAscii(token.ticker)).call();\n    const tokenWallet = await contracts[token.ticker].methods.balanceOf(account).call();\n    return {\n      tokenDex,\n      tokenWallet\n    };\n  };\n\n  const getOrders = async token => {\n    const orders = await Promise.all([contracts.dex.methods.getOrders(web3.utils.fromAscii(token.ticker), SIDE.BUY).call(), contracts.dex.methods.getOrders(web3.utils.fromAscii(token.ticker), SIDE.SELL).call()]);\n    return {\n      buy: orders[0],\n      sell: orders[1]\n    };\n  };\n\n  const selectToken = token => {\n    setUser({ ...user,\n      selectedToken: token\n    });\n  };\n\n  const deposit = async amount => {\n    await contracts[user.selectedToken.ticker].methods.approve(contracts.dex.options.address, amount).send({\n      from: user.accounts[0]\n    });\n    await contracts.dex.methods.deposit(amount, web3.utils.fromAscii(user.selectedToken.ticker)).send({\n      from: user.accounts[0]\n    });\n    const balances = getBalances(user.accounts[0], user.selectedToken);\n    setUser(user => ({ ...user,\n      balances\n    }));\n  };\n\n  const withdraw = async amount => {\n    await contracts.dex.methods.withdraw(amount, web3.utils.fromAscii(user.selectedToken.ticker)).send({\n      from: user.accounts[0]\n    });\n    const balances = getBalances(user.accounts[0], user.selectedToken);\n    setUser(user => ({ ...user,\n      balances\n    }));\n  };\n\n  const createMarketOrder = async (amount, side) => {\n    await contracts.dex.methods.createMarketOrder(web3.utils.fromAscii(user.selectedToken.ticker), amount, side).send({\n      from: accounts[0]\n    });\n    const orders = await getOrders(user.selectedToken);\n    setOrders(orders);\n  };\n\n  const createLimitOrder = async (amount, price, side) => {\n    await contracts.dex.methods.createLimitOrder(web3.utils.fromAscii(user.selectedToken.ticker), amount, price, side).send({\n      from: accounts[0]\n    });\n    const orders = await getOrders(user.selectedToken);\n    setOrders(orders);\n  };\n\n  useEffect(() => {\n    const init = async () => {\n      const rawTokens = await contracts.dex.methods.getTokens().call();\n      const tokens = rawTokens.map(token => ({ ...token,\n        ticker: web3.utils.hexToUtf8(token.ticker)\n      }));\n      const [balances, orders] = await Promise.all([getBalances(accounts[0], tokens[0]), getOrders(tokens[0])]);\n      setTokens(tokens);\n      setUser({\n        accounts,\n        balances,\n        selectedToken: tokens[0]\n      });\n      setOrders(orders);\n    };\n\n    init();\n  }, []);\n  useEffect(() => {\n    const init = async () => {\n      const [balances, orders] = await Promise.all([getBalances(accounts[0], user.selectedToken), getOrders(user.selectedToken)]);\n      setUser(user => ({ ...user,\n        balances\n      }));\n      setOrders(orders);\n    };\n\n    if (typeof user.selectedToken !== 'undefined') {\n      init();\n    }\n  }, [user.selectedToken]);\n\n  if (typeof user.selectedToken === 'undefined') {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"Loading...\");\n  }\n\n  return React.createElement(\"div\", {\n    id: \"app\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(Header, {\n    contracts: contracts,\n    tokens: tokens,\n    user: user,\n    selectToken: selectToken,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  })), React.createElement(\"main\", {\n    className: \"container-fluid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-sm-4 first-col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, React.createElement(Wallet, {\n    user: user,\n    deposit: deposit,\n    withdraw: withdraw,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }), user.selectedToken.ticker !== 'DAI' ? React.createElement(NewOrder, {\n    createMarketOrder: createMarketOrder,\n    createLimitOrder: createLimitOrder,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }) : null), user.selectedToken.ticker !== 'DAI' ? React.createElement(\"div\", {\n    className: \"col-sm-8\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, React.createElement(AllOrders, {\n    orders: orders,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }), React.createElement(MyOrders, {\n    orders: {\n      buy: orders.buy.filter(order => order.trader.toLowerCase() === user.accounts[0].toLowerCase()),\n      sell: orders.sell.filter(order => order.trader.toLowerCase() === user.accounts[0].toLowerCase())\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  })) : null)), React.createElement(Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/alex/Documents/dex/client/src/App.js"],"names":["React","useState","useEffect","Header","Footer","Wallet","NewOrder","AllOrders","MyOrders","AllTrades","SIDE","BUY","SELL","App","web3","accounts","contracts","tokens","setTokens","user","setUser","balances","tokenDex","tokenWallet","selectedToken","undefined","orders","setOrders","buy","sell","trades","setTrades","getBalances","account","token","dex","methods","traderBalances","utils","fromAscii","ticker","call","balanceOf","getOrders","Promise","all","selectToken","deposit","amount","approve","options","address","send","from","withdraw","createMarketOrder","side","createLimitOrder","price","init","rawTokens","getTokens","map","hexToUtf8","filter","order","trader","toLowerCase"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,MAAP,MAAoB,aAApB;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,MAAMC,IAAI,GAAG;AACXC,EAAAA,GAAG,EAAE,CADM;AAEXC,EAAAA,IAAI,EAAE;AAFK,CAAb;;AAKA,SAASC,GAAT,CAAa;AAACC,EAAAA,IAAD;AAAOC,EAAAA,QAAP;AAAiBC,EAAAA;AAAjB,CAAb,EAA0C;AACxC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBjB,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACkB,IAAD,EAAOC,OAAP,IAAkBnB,QAAQ,CAAC;AAC/Bc,IAAAA,QAAQ,EAAE,EADqB;AAE/BM,IAAAA,QAAQ,EAAE;AACRC,MAAAA,QAAQ,EAAE,CADF;AAERC,MAAAA,WAAW,EAAE;AAFL,KAFqB;AAM/BC,IAAAA,aAAa,EAAEC;AANgB,GAAD,CAAhC;AAQA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsB1B,QAAQ,CAAC;AACnC2B,IAAAA,GAAG,EAAE,EAD8B;AAEnCC,IAAAA,IAAI,EAAE;AAF6B,GAAD,CAApC;AAIA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsB9B,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAM+B,WAAW,GAAG,OAAOC,OAAP,EAAgBC,KAAhB,KAA0B;AAC5C,UAAMZ,QAAQ,GAAG,MAAMN,SAAS,CAACmB,GAAV,CAAcC,OAAd,CACpBC,cADoB,CACLJ,OADK,EACInB,IAAI,CAACwB,KAAL,CAAWC,SAAX,CAAqBL,KAAK,CAACM,MAA3B,CADJ,EAEpBC,IAFoB,EAAvB;AAGA,UAAMlB,WAAW,GAAG,MAAMP,SAAS,CAACkB,KAAK,CAACM,MAAP,CAAT,CAAwBJ,OAAxB,CACvBM,SADuB,CACbT,OADa,EAEvBQ,IAFuB,EAA1B;AAGA,WAAO;AAACnB,MAAAA,QAAD;AAAWC,MAAAA;AAAX,KAAP;AACD,GARD;;AAUA,QAAMoB,SAAS,GAAG,MAAMT,KAAN,IAAe;AAC/B,UAAMR,MAAM,GAAG,MAAMkB,OAAO,CAACC,GAAR,CAAY,CAC/B7B,SAAS,CAACmB,GAAV,CAAcC,OAAd,CACGO,SADH,CACa7B,IAAI,CAACwB,KAAL,CAAWC,SAAX,CAAqBL,KAAK,CAACM,MAA3B,CADb,EACiD9B,IAAI,CAACC,GADtD,EAEG8B,IAFH,EAD+B,EAI/BzB,SAAS,CAACmB,GAAV,CAAcC,OAAd,CACGO,SADH,CACa7B,IAAI,CAACwB,KAAL,CAAWC,SAAX,CAAqBL,KAAK,CAACM,MAA3B,CADb,EACiD9B,IAAI,CAACE,IADtD,EAEG6B,IAFH,EAJ+B,CAAZ,CAArB;AAQA,WAAO;AAACb,MAAAA,GAAG,EAAEF,MAAM,CAAC,CAAD,CAAZ;AAAiBG,MAAAA,IAAI,EAAEH,MAAM,CAAC,CAAD;AAA7B,KAAP;AACD,GAVD;;AAYA,QAAMoB,WAAW,GAAGZ,KAAK,IAAI;AAC3Bd,IAAAA,OAAO,CAAC,EAAC,GAAGD,IAAJ;AAAUK,MAAAA,aAAa,EAAEU;AAAzB,KAAD,CAAP;AACD,GAFD;;AAIA,QAAMa,OAAO,GAAG,MAAMC,MAAN,IAAgB;AAC9B,UAAMhC,SAAS,CAACG,IAAI,CAACK,aAAL,CAAmBgB,MAApB,CAAT,CAAqCJ,OAArC,CACHa,OADG,CACKjC,SAAS,CAACmB,GAAV,CAAce,OAAd,CAAsBC,OAD3B,EACoCH,MADpC,EAEHI,IAFG,CAEE;AAACC,MAAAA,IAAI,EAAElC,IAAI,CAACJ,QAAL,CAAc,CAAd;AAAP,KAFF,CAAN;AAGA,UAAMC,SAAS,CAACmB,GAAV,CAAcC,OAAd,CACHW,OADG,CAEFC,MAFE,EAGFlC,IAAI,CAACwB,KAAL,CAAWC,SAAX,CAAqBpB,IAAI,CAACK,aAAL,CAAmBgB,MAAxC,CAHE,EAKHY,IALG,CAKE;AAACC,MAAAA,IAAI,EAAElC,IAAI,CAACJ,QAAL,CAAc,CAAd;AAAP,KALF,CAAN;AAMA,UAAMM,QAAQ,GAAGW,WAAW,CAC1Bb,IAAI,CAACJ,QAAL,CAAc,CAAd,CAD0B,EAE1BI,IAAI,CAACK,aAFqB,CAA5B;AAIAJ,IAAAA,OAAO,CAACD,IAAI,KAAK,EAAC,GAAGA,IAAJ;AAAUE,MAAAA;AAAV,KAAL,CAAL,CAAP;AACD,GAfD;;AAiBA,QAAMiC,QAAQ,GAAG,MAAMN,MAAN,IAAgB;AAC/B,UAAMhC,SAAS,CAACmB,GAAV,CAAcC,OAAd,CACHkB,QADG,CAEFN,MAFE,EAGFlC,IAAI,CAACwB,KAAL,CAAWC,SAAX,CAAqBpB,IAAI,CAACK,aAAL,CAAmBgB,MAAxC,CAHE,EAKHY,IALG,CAKE;AAACC,MAAAA,IAAI,EAAElC,IAAI,CAACJ,QAAL,CAAc,CAAd;AAAP,KALF,CAAN;AAMA,UAAMM,QAAQ,GAAGW,WAAW,CAC1Bb,IAAI,CAACJ,QAAL,CAAc,CAAd,CAD0B,EAE1BI,IAAI,CAACK,aAFqB,CAA5B;AAIAJ,IAAAA,OAAO,CAACD,IAAI,KAAK,EAAC,GAAGA,IAAJ;AAAUE,MAAAA;AAAV,KAAL,CAAL,CAAP;AACD,GAZD;;AAcA,QAAMkC,iBAAiB,GAAG,OAAOP,MAAP,EAAeQ,IAAf,KAAwB;AAChD,UAAMxC,SAAS,CAACmB,GAAV,CAAcC,OAAd,CACHmB,iBADG,CAEFzC,IAAI,CAACwB,KAAL,CAAWC,SAAX,CAAqBpB,IAAI,CAACK,aAAL,CAAmBgB,MAAxC,CAFE,EAGFQ,MAHE,EAIFQ,IAJE,EAMHJ,IANG,CAME;AAACC,MAAAA,IAAI,EAAEtC,QAAQ,CAAC,CAAD;AAAf,KANF,CAAN;AAOE,UAAMW,MAAM,GAAG,MAAMiB,SAAS,CAACxB,IAAI,CAACK,aAAN,CAA9B;AACAG,IAAAA,SAAS,CAACD,MAAD,CAAT;AACH,GAVD;;AAYA,QAAM+B,gBAAgB,GAAG,OAAOT,MAAP,EAAeU,KAAf,EAAsBF,IAAtB,KAA+B;AACtD,UAAMxC,SAAS,CAACmB,GAAV,CAAcC,OAAd,CACHqB,gBADG,CAEF3C,IAAI,CAACwB,KAAL,CAAWC,SAAX,CAAqBpB,IAAI,CAACK,aAAL,CAAmBgB,MAAxC,CAFE,EAGFQ,MAHE,EAIFU,KAJE,EAKFF,IALE,EAOHJ,IAPG,CAOE;AAACC,MAAAA,IAAI,EAAEtC,QAAQ,CAAC,CAAD;AAAf,KAPF,CAAN;AAQE,UAAMW,MAAM,GAAG,MAAMiB,SAAS,CAACxB,IAAI,CAACK,aAAN,CAA9B;AACAG,IAAAA,SAAS,CAACD,MAAD,CAAT;AACH,GAXD;;AAaAxB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMyD,IAAI,GAAG,YAAY;AACvB,YAAMC,SAAS,GAAG,MAAM5C,SAAS,CAACmB,GAAV,CAAcC,OAAd,CAAsByB,SAAtB,GAAkCpB,IAAlC,EAAxB;AACA,YAAMxB,MAAM,GAAG2C,SAAS,CAACE,GAAV,CAAc5B,KAAK,KAAK,EACrC,GAAGA,KADkC;AAErCM,QAAAA,MAAM,EAAE1B,IAAI,CAACwB,KAAL,CAAWyB,SAAX,CAAqB7B,KAAK,CAACM,MAA3B;AAF6B,OAAL,CAAnB,CAAf;AAIA,YAAM,CAACnB,QAAD,EAAWK,MAAX,IAAqB,MAAMkB,OAAO,CAACC,GAAR,CAAY,CAC3Cb,WAAW,CAACjB,QAAQ,CAAC,CAAD,CAAT,EAAcE,MAAM,CAAC,CAAD,CAApB,CADgC,EAE3C0B,SAAS,CAAC1B,MAAM,CAAC,CAAD,CAAP,CAFkC,CAAZ,CAAjC;AAIAC,MAAAA,SAAS,CAACD,MAAD,CAAT;AACAG,MAAAA,OAAO,CAAC;AAACL,QAAAA,QAAD;AAAWM,QAAAA,QAAX;AAAqBG,QAAAA,aAAa,EAAEP,MAAM,CAAC,CAAD;AAA1C,OAAD,CAAP;AACAU,MAAAA,SAAS,CAACD,MAAD,CAAT;AACD,KAbD;;AAcAiC,IAAAA,IAAI;AACL,GAhBQ,EAgBN,EAhBM,CAAT;AAkBAzD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMyD,IAAI,GAAG,YAAY;AACvB,YAAM,CAACtC,QAAD,EAAWK,MAAX,IAAqB,MAAMkB,OAAO,CAACC,GAAR,CAAY,CAC3Cb,WAAW,CAACjB,QAAQ,CAAC,CAAD,CAAT,EAAcI,IAAI,CAACK,aAAnB,CADgC,EAE3CmB,SAAS,CAACxB,IAAI,CAACK,aAAN,CAFkC,CAAZ,CAAjC;AAIAJ,MAAAA,OAAO,CAACD,IAAI,KAAK,EAAC,GAAGA,IAAJ;AAASE,QAAAA;AAAT,OAAL,CAAL,CAAP;AACAM,MAAAA,SAAS,CAACD,MAAD,CAAT;AACD,KAPD;;AAQA,QAAG,OAAOP,IAAI,CAACK,aAAZ,KAA8B,WAAjC,EAA8C;AAC5CmC,MAAAA,IAAI;AACL;AACF,GAZQ,EAYN,CAACxC,IAAI,CAACK,aAAN,CAZM,CAAT;;AAcA,MAAG,OAAOL,IAAI,CAACK,aAAZ,KAA8B,WAAjC,EAA8C;AAC5C,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD;;AAED,SACE;AAAK,IAAA,EAAE,EAAC,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACC,IAAA,SAAS,EAAER,SADZ;AAEC,IAAA,MAAM,EAAEC,MAFT;AAGC,IAAA,IAAI,EAAEE,IAHP;AAIC,IAAA,WAAW,EAAE2B,WAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADD,EASE;AAAM,IAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAE3B,IADR;AAEE,IAAA,OAAO,EAAE4B,OAFX;AAGE,IAAA,QAAQ,EAAEO,QAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAMGnC,IAAI,CAACK,aAAL,CAAmBgB,MAAnB,KAA8B,KAA9B,GACC,oBAAC,QAAD;AACE,IAAA,iBAAiB,EAAEe,iBADrB;AAEE,IAAA,gBAAgB,EAAEE,gBAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAKG,IAXN,CADF,EAcGtC,IAAI,CAACK,aAAL,CAAmBgB,MAAnB,KAA8B,KAA9B,GACG;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,MAAM,EAAEd,MADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAIE,oBAAC,QAAD;AACE,IAAA,MAAM,EAAE;AACNE,MAAAA,GAAG,EAAEF,MAAM,CAACE,GAAP,CAAWoC,MAAX,CACHC,KAAK,IAAIA,KAAK,CAACC,MAAN,CAAaC,WAAb,OAA+BhD,IAAI,CAACJ,QAAL,CAAc,CAAd,EAAiBoD,WAAjB,EADrC,CADC;AAINtC,MAAAA,IAAI,EAAEH,MAAM,CAACG,IAAP,CAAYmC,MAAZ,CACJC,KAAK,IAAIA,KAAK,CAACC,MAAN,CAAaC,WAAb,OAA+BhD,IAAI,CAACJ,QAAL,CAAc,CAAd,EAAiBoD,WAAjB,EADpC;AAJA,KADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADH,GAgBK,IA9BR,CADF,CATF,EA2CE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA3CF,CADF;AA+CD;;AAED,eAAetD,GAAf","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport Header from './Header.js';\nimport Footer from './Footer.js';\nimport Wallet from  './Wallet.js';\nimport NewOrder from './NewOrder.js';\nimport AllOrders from './AllOrders';\nimport MyOrders from './MyOrders.js';\nimport AllTrades from './AllTrades';\n\nconst SIDE = {\n  BUY: 0,\n  SELL: 1\n};\n\nfunction App({web3, accounts, contracts}) {\n  const [tokens, setTokens] = useState([]);\n  const [user, setUser] = useState({\n    accounts: [],\n    balances: {\n      tokenDex: 0,\n      tokenWallet: 0\n    },\n    selectedToken: undefined\n  });\n  const [orders, setOrders] = useState({\n    buy: [],\n    sell: []\n  });\n  const [trades, setTrades] = useState([])\n\n  const getBalances = async (account, token) => {\n    const tokenDex = await contracts.dex.methods\n      .traderBalances(account, web3.utils.fromAscii(token.ticker))\n      .call();\n    const tokenWallet = await contracts[token.ticker].methods\n      .balanceOf(account)\n      .call()\n    return {tokenDex, tokenWallet};\n  }\n\n  const getOrders = async token => {\n    const orders = await Promise.all([\n      contracts.dex.methods\n        .getOrders(web3.utils.fromAscii(token.ticker), SIDE.BUY)\n        .call(),\n      contracts.dex.methods\n        .getOrders(web3.utils.fromAscii(token.ticker), SIDE.SELL)\n        .call()\n    ])\n    return {buy: orders[0], sell: orders[1]}\n  }\n\n  const selectToken = token => {\n    setUser({...user, selectedToken: token});\n  }\n\n  const deposit = async amount => {\n    await contracts[user.selectedToken.ticker].methods\n      .approve(contracts.dex.options.address, amount)\n      .send({from: user.accounts[0]});\n    await contracts.dex.methods\n      .deposit(\n        amount,\n        web3.utils.fromAscii(user.selectedToken.ticker)\n      )\n      .send({from: user.accounts[0]});\n    const balances = getBalances(\n      user.accounts[0],\n      user.selectedToken\n    )\n    setUser(user => ({...user, balances}));\n  }\n\n  const withdraw = async amount => {\n    await contracts.dex.methods\n      .withdraw(\n        amount,\n        web3.utils.fromAscii(user.selectedToken.ticker)\n      )\n      .send({from: user.accounts[0]});\n    const balances = getBalances(\n      user.accounts[0],\n      user.selectedToken\n    )\n    setUser(user => ({...user, balances}));\n  }\n\n  const createMarketOrder = async (amount, side) => {\n    await contracts.dex.methods\n      .createMarketOrder(\n        web3.utils.fromAscii(user.selectedToken.ticker),\n        amount,\n        side\n      )\n      .send({from: accounts[0]});\n      const orders = await getOrders(user.selectedToken);\n      setOrders(orders);\n  }\n\n  const createLimitOrder = async (amount, price, side) => {\n    await contracts.dex.methods\n      .createLimitOrder(\n        web3.utils.fromAscii(user.selectedToken.ticker),\n        amount,\n        price,\n        side\n      )\n      .send({from: accounts[0]});\n      const orders = await getOrders(user.selectedToken);\n      setOrders(orders);\n  }\n\n  useEffect(() => {\n    const init = async () => {\n      const rawTokens = await contracts.dex.methods.getTokens().call(); \n      const tokens = rawTokens.map(token => ({\n        ...token,\n        ticker: web3.utils.hexToUtf8(token.ticker)\n      }));\n      const [balances, orders] = await Promise.all([\n        getBalances(accounts[0], tokens[0]),\n        getOrders(tokens[0])\n      ]);\n      setTokens(tokens);\n      setUser({accounts, balances, selectedToken: tokens[0]});\n      setOrders(orders);\n    }\n    init();\n  }, []);\n\n  useEffect(() => {\n    const init = async () => {\n      const [balances, orders] = await Promise.all([\n        getBalances(accounts[0], user.selectedToken),\n        getOrders(user.selectedToken)\n      ]);\n      setUser(user => ({...user,balances}));\n      setOrders(orders);\n    }\n    if(typeof user.selectedToken !== 'undefined') {\n      init();\n    }\n  }, [user.selectedToken]);\n\n  if(typeof user.selectedToken === 'undefined') {\n    return <div>Loading...</div>\n  }\n\n  return (\n    <div id=\"app\">\n     <div>\n       <Header\n        contracts={contracts}\n        tokens={tokens}\n        user={user}\n        selectToken={selectToken}\n       />\n      </div>\n      <main className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-sm-4 first-col\">\n            <Wallet \n              user={user}\n              deposit={deposit}\n              withdraw={withdraw}\n            />\n            {user.selectedToken.ticker !== 'DAI' ? (\n              <NewOrder \n                createMarketOrder={createMarketOrder}\n                createLimitOrder={createLimitOrder}\n              />\n            ) : null}\n          </div>\n          {user.selectedToken.ticker !== 'DAI' ? (\n              <div className=\"col-sm-8\">\n                <AllOrders \n                  orders={orders}\n                />\n                <MyOrders \n                  orders={{\n                    buy: orders.buy.filter(\n                      order => order.trader.toLowerCase() === user.accounts[0].toLowerCase()\n                    ),\n                    sell: orders.sell.filter(\n                      order => order.trader.toLowerCase() === user.accounts[0].toLowerCase()\n                    )\n                  }}\n                />\n              </div>\n            ) : null}\n        </div>\n      </main>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}