{"ast":null,"code":"var _jsxFileName = \"/Users/alex/Documents/dex/client/src/AllOrders.js\";\nimport React from \"react\";\nimport Moment from \"react-moment\";\n\nfunction AllOrders({\n  orders\n}) {\n  const renderList = (orders, side, className) => {\n    return React.createElement(React.Fragment, null, React.createElement(\"table\", {\n      className: `table table-striped mb-0 order-list ${className}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      className: \"table-title order-list-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      colSpan: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, side)), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, \"amount\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, \"price\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, \"date\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, orders.map(order => React.createElement(\"tr\", {\n      key: order.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, order.amount - order.filled), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, order.price), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(Moment, {\n      fromNow: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, parseInt(order.date) * 1000)))))));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"card-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"All orders\"), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-sm-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, renderList(orders.buy, \"Buy\", \"order-list-buy\")), React.createElement(\"div\", {\n    className: \"col-sm-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, renderList(orders.sell, \"Sell\", \"order-list-sell\"))));\n}\n\nexport default AllOrders;","map":{"version":3,"sources":["/Users/alex/Documents/dex/client/src/AllOrders.js"],"names":["React","Moment","AllOrders","orders","renderList","side","className","map","order","id","amount","filled","price","parseInt","date","buy","sell"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB;;AAEA,SAASC,SAAT,CAAmB;AAAEC,EAAAA;AAAF,CAAnB,EAA+B;AAC7B,QAAMC,UAAU,GAAG,CAACD,MAAD,EAASE,IAAT,EAAeC,SAAf,KAA6B;AAC9C,WACE,0CACE;AAAO,MAAA,SAAS,EAAG,uCAAsCA,SAAU,EAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,8BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,OAAO,EAAC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiBD,IAAjB,CADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,CAJF,CADF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGF,MAAM,CAACI,GAAP,CAAYC,KAAD,IACV;AAAI,MAAA,GAAG,EAAEA,KAAK,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,KAAK,CAACE,MAAN,GAAeF,KAAK,CAACG,MAA1B,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKH,KAAK,CAACI,KAAX,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,OAAO,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiBC,QAAQ,CAACL,KAAK,CAACM,IAAP,CAAR,GAAuB,IAAxC,CADF,CAHF,CADD,CADH,CAXF,CADF,CADF;AA2BD,GA5BD;;AA8BA,SACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGV,UAAU,CAACD,MAAM,CAACY,GAAR,EAAa,KAAb,EAAoB,gBAApB,CADb,CADF,EAIE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGX,UAAU,CAACD,MAAM,CAACa,IAAR,EAAc,MAAd,EAAsB,iBAAtB,CADb,CAJF,CAFF,CADF;AAaD;;AAED,eAAed,SAAf","sourcesContent":["import React from \"react\";\nimport Moment from \"react-moment\";\n\nfunction AllOrders({ orders }) {\n  const renderList = (orders, side, className) => {\n    return (\n      <>\n        <table className={`table table-striped mb-0 order-list ${className}`}>\n          <thead>\n            <tr className=\"table-title order-list-title\">\n              <th colSpan=\"3\">{side}</th>\n            </tr>\n            <tr>\n              <th>amount</th>\n              <th>price</th>\n              <th>date</th>\n            </tr>\n          </thead>\n          <tbody>\n            {orders.map((order) => (\n              <tr key={order.id}>\n                <td>{order.amount - order.filled}</td>\n                <td>{order.price}</td>\n                <td>\n                  <Moment fromNow>{parseInt(order.date) * 1000}</Moment>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </>\n    );\n  };\n\n  return (\n    <div className=\"card\">\n      <h2 className=\"card-title\">All orders</h2>\n      <div className=\"row\">\n        <div className=\"col-sm-6\">\n          {renderList(orders.buy, \"Buy\", \"order-list-buy\")}\n        </div>\n        <div className=\"col-sm-6\">\n          {renderList(orders.sell, \"Sell\", \"order-list-sell\")}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default AllOrders;\n"]},"metadata":{},"sourceType":"module"}