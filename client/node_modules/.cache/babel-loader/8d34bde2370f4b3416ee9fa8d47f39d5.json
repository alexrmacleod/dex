{"ast":null,"code":"var _jsxFileName = \"/Users/alex/Documents/dex/client/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Header from './Header.js';\nimport Footer from './Footer.js';\n\nfunction App({\n  web3,\n  accounts,\n  contracts\n}) {\n  const [tokens, setTokens] = useState([]);\n  const [user, setUser] = useState({\n    accounts: [],\n    balances: {\n      tokenDex: 0,\n      tokenWallet: 0\n    },\n    selectedTokens: undefined\n  });\n\n  const getBalances = async (account, token) => {\n    const tokenDex = await contracts.dex.methods.traderBalances(account, web3.utils.fromAscii(token.ticker));\n  };\n\n  const selectToken = token => {\n    setUser({ ...user,\n      selectedToken: token\n    });\n  };\n\n  const deposit = async amount => {\n    await contracts[user.selectedTokens.ticker].methods.approve(contracts.dex.options.address, amount).send({\n      from: user.accounts[0]\n    });\n    await contracts.dex.methods.deposit(amount, web3.utils.fromAscii(user.selectedTokens.ticker)).send({\n      from: user.accounts[0]\n    });\n  };\n\n  useEffect(() => {\n    const init = async () => {\n      const rawTokens = await contracts.dex.methods.getTokens().call();\n      const tokens = rawTokens.map(token => ({ ...token,\n        ticker: web3.utils.hexToUtf8(token.ticker)\n      }));\n      setTokens(tokens);\n      setUser({\n        accounts,\n        selectedToken: tokens[0]\n      });\n    };\n\n    init();\n  }, []);\n\n  if (typeof user.selectedToken === 'undefined') {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Loading...\");\n  }\n\n  return React.createElement(\"div\", {\n    id: \"app\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(Header, {\n    contracts: contracts,\n    tokens: tokens,\n    user: user,\n    selectToken: selectToken,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Main part\"), React.createElement(Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/alex/Documents/dex/client/src/App.js"],"names":["React","useState","useEffect","Header","Footer","App","web3","accounts","contracts","tokens","setTokens","user","setUser","balances","tokenDex","tokenWallet","selectedTokens","undefined","getBalances","account","token","dex","methods","traderBalances","utils","fromAscii","ticker","selectToken","selectedToken","deposit","amount","approve","options","address","send","from","init","rawTokens","getTokens","call","map","hexToUtf8"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport Header from './Header.js'\nimport Footer from './Footer.js';\n\nfunction App({web3, accounts, contracts}) {\n  const [tokens, setTokens] = useState([]);\n  const [user, setUser] = useState({\n    accounts: [],\n    balances: {\n      tokenDex: 0,\n      tokenWallet: 0\n    },\n    selectedTokens: undefined\n  });\n\n  const getBalances = async (account, token) => {\n    const tokenDex = await contracts.dex.methods\n      .traderBalances(account, web3.utils.fromAscii(token.ticker))\n  }\n  const selectToken = token => {\n    setUser({...user, selectedToken: token});\n  }\n\n  const deposit = async amount => {\n    await contracts[user.selectedTokens.ticker].methods\n      .approve(contracts.dex.options.address, amount)\n      .send({from: user.accounts[0]});\n    await contracts.dex.methods\n      .deposit(\n        amount,\n        web3.utils.fromAscii(user.selectedTokens.ticker)\n      )\n      .send({from: user.accounts[0]});\n  }\n\n  useEffect(() => {\n    const init = async () => {\n      const rawTokens = await contracts.dex.methods.getTokens().call(); \n      const tokens = rawTokens.map(token => ({\n        ...token,\n        ticker: web3.utils.hexToUtf8(token.ticker)\n      }));\n      setTokens(tokens);\n      setUser({accounts, selectedToken: tokens[0]});\n    }\n    init();\n  }, []);\n\n  if(typeof user.selectedToken === 'undefined') {\n    return <div>Loading...</div>\n  }\n  return (\n    <div id=\"app\">\n     <div>\n       <Header\n        contracts={contracts}\n        tokens={tokens}\n        user={user}\n        selectToken={selectToken}\n       />\n      </div>\n      <div>\n        Main part\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}