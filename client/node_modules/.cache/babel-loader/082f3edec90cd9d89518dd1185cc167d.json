{"ast":null,"code":"var _jsxFileName = \"/Users/alex/Documents/dex/client/src/AllTrades.js\";\nimport React from 'react';\nimport Moment from 'react-moment';\nimport { ResponsiveContainer, LineChart, Line, CartesianGrid, XAxis, YAxis } from 'recharts';\n\nfunction AllTrades({\n  trades\n}) {\n  const renderList = (trades, className) => {\n    return React.createElement(React.Fragment, null, React.createElement(\"table\", {\n      className: `table table-striped trade-list mb-0 ${className}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, \"amount\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, \"price\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, \"date\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, trades.map(trade => React.createElement(\"tr\", {\n      key: trade.tradeId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, trade.amount), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, trade.price), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(Moment, {\n      fromNow: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, parseInt(trade.date) * 1000)))))));\n  };\n\n  const renderChart = trades => {\n    return React.createElement(ResponsiveContainer, {\n      width: \"100%\",\n      height: 200,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(LineChart, {\n      data: trades,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(Line, {\n      type: \"monotone\",\n      dataKey: \"price\",\n      stroke: \"#741cd7\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), React.createElement(CartesianGrid, {\n      stroke: \"#000000\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(XAxis, {\n      dataKey: \"date\",\n      tickFormatter: dateStr => {\n        const date = new Date(parseInt(dateStr) * 1000);\n        return `${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}`;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(YAxis, {\n      dataKey: \"price\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    })));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"card-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"All trades\"), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-sm-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, renderChart(trades), renderList(trades, 'trade-list'))));\n}\n\nexport default AllTrades;","map":{"version":3,"sources":["/Users/alex/Documents/dex/client/src/AllTrades.js"],"names":["React","Moment","ResponsiveContainer","LineChart","Line","CartesianGrid","XAxis","YAxis","AllTrades","trades","renderList","className","map","trade","tradeId","amount","price","parseInt","date","renderChart","dateStr","Date","getHours","getMinutes","getSeconds"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Moment from 'react-moment';\nimport { ResponsiveContainer, LineChart, Line, CartesianGrid, XAxis, YAxis } from 'recharts';\n\nfunction AllTrades({trades}) {\n  const renderList = (trades, className) => {\n    return (\n      <>\n        <table className={`table table-striped trade-list mb-0 ${className}`}>\n          <thead>\n            <tr>\n              <th>amount</th>\n              <th>price</th>\n              <th>date</th>\n            </tr>\n          </thead>\n          <tbody>\n            {trades.map((trade) => (\n              <tr key={trade.tradeId}>\n                <td>{trade.amount}</td>\n                <td>{trade.price}</td>\n                <td>\n                  <Moment fromNow>{parseInt(trade.date) * 1000}</Moment>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </>\n    );\n  }\n\n  const renderChart = (trades) => {\n    return (\n      <ResponsiveContainer width=\"100%\" height={200}>\n      <LineChart data={trades}>\n        <Line type=\"monotone\" dataKey=\"price\" stroke=\"#741cd7\" />\n        <CartesianGrid stroke=\"#000000\" />\n        <XAxis dataKey=\"date\" tickFormatter={dateStr => {\n          const date = new Date(parseInt(dateStr) * 1000); \n          return `${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}`;\n        }} />\n        <YAxis dataKey=\"price\" />\n      </LineChart>\n      </ResponsiveContainer>\n    );\n  }\n\n  return (\n    <div className=\"card\">\n      <h2 className=\"card-title\">All trades</h2>\n      <div className=\"row\">\n        <div className=\"col-sm-12\">\n          {renderChart(trades)}\n          {renderList(trades, 'trade-list')}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default AllTrades;"]},"metadata":{},"sourceType":"module"}